openapi: 3.0.0
info:
  version: '0.1.0'
  title: 'Task Manager'
  description: 'A simple API to manage tasks.'
  contact:
    name: 'API Support'
    url: 'https://example.com/support'
    email: 'support@example.com'
  license:
    name: 'Apache 2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

x-kong-name: task-manager

servers:
  - url: http://task-manager:3000

tags:
  - name: 'Tasks'
    description: 'Operations about tasks'

paths:
  /tasks:
    get:
      description: get tasks description
      tags:
        - 'Tasks'
      summary: 'Get all tasks'
      operationId: 'getTasks'
      parameters:
        - name: 'status'
          in: 'query'
          description: 'Filter by task status'
          required: false
          schema:
            type: 'string'
            enum: ['pending', 'completed']
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: 'array'
                items:
                  $ref: '#/components/schemas/Task'

    post:
      tags:
        - 'Tasks'
      summary: 'Create a new task'
      operationId: 'createTask'
      requestBody:
        description: 'Task object to be added'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: 'Task successfully created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{taskId}:
    get:
      tags:
        - 'Tasks'
      summary: 'Get a task by ID'
      operationId: 'getTaskById'
      parameters:
        - name: 'taskId'
          in: 'path'
          description: 'ID of the task to retrieve'
          required: true
          schema:
            type: 'integer'
            format: 'int64'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: 'Task not found'

    put:
      tags:
        - 'Tasks'
      summary: 'Update a task'
      operationId: 'updateTask'
      parameters:
        - name: 'taskId'
          in: 'path'
          required: true
          schema:
            type: 'integer'
            format: 'int64'
      requestBody:
        description: 'Task object to be updated'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: 'Task successfully updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

    delete:
      tags:
        - 'Tasks'
      summary: 'Delete a task'
      operationId: 'deleteTask'
      parameters:
        - name: 'taskId'
          in: 'path'
          required: true
          schema:
            type: 'integer'
            format: 'int64'
      responses:
        '204':
          description: 'Task successfully deleted'
        '404':
          description: 'Task not found'

components:
  schemas:
    Task:
      type: 'object'
      properties:
        id:
          type: 'integer'
          format: 'int64'
        title:
          type: 'string'
          example: 'Buy groceries'
        description:
          type: 'string'
          example: 'Buy milk, bread, and eggs'
        status:
          type: 'string'
          enum: ['pending', 'completed']
          example: 'pending'
      required:
        - 'id'
        - 'title'
        - 'status'

